flash: Memory.MappedMemory @ sysbus 0x08000000
    size: 0x100000

sram: Memory.MappedMemory @ sysbus 0x20000000
    size: 0x18000

nvic: IRQControllers.NVIC @ sysbus 0xE000E000
    priorityMask: 0xF0
    systickFrequency: 80000000
    IRQ -> cpu@0

cpu: CPU.CortexM @ sysbus
    cpuType: "cortex-m4"
    nvic: nvic

usart1: UART.STM32F7_USART @ sysbus <0x40013800, +0x400>
    frequency: 80000000
    -> nvic@37

usart2: UART.STM32F7_USART @ sysbus <0x40004400, +0x400>
    frequency: 80000000
    -> nvic@38

usart3: UART.STM32F7_USART @ sysbus <0x40004800, +0x400>
    frequency: 80000000
    -> nvic@39

uart4: UART.STM32F7_USART @ sysbus <0x40004C00, +0x400>
    frequency: 80000000
    -> nvic@52

uart5: UART.STM32F7_USART @ sysbus <0x40005000, +0x400>
    frequency: 80000000
    -> nvic@53

lpuart1: UART.STM32F7_USART @ sysbus <0x40008000, +0x400>
    frequency: 80000000
    -> nvic@70

exti: IRQControllers.EXTI @ sysbus <0x40010400, +0x400>
    [0-6] -> nvic@[6-10, 23, 40]

gpioPortA: GPIOPort.STM32_GPIOPort @ sysbus <0x48000000, +0x400>
    modeResetValue: 0xABFFFFFF
    outputSpeedResetValue: 0x0C000000
    pullUpPullDownResetValue: 0x64000000
    [0-15] -> exti@[0-15]

gpioPortB: GPIOPort.STM32_GPIOPort @ sysbus <0x48000400, +0x400>
    modeResetValue: 0xFFFFFEBF
    pullUpPullDownResetValue: 0x00000100
    [0-15] -> exti@[0-15]

gpioPortC: GPIOPort.STM32_GPIOPort @ sysbus <0x48000800, +0x400>
    modeResetValue: 0xFFFFFFFF
    [0-15] -> exti@[0-15]

gpioPortD: GPIOPort.STM32_GPIOPort @ sysbus <0x48000C00, +0x400>
    modeResetValue: 0xFFFFFFFF
    [0-15] -> exti@[0-15]

gpioPortE: GPIOPort.STM32_GPIOPort @ sysbus <0x48001000, +0x400>
    modeResetValue: 0xFFFFFFFF
    [0-15] -> exti@[0-15]

gpioPortF: GPIOPort.STM32_GPIOPort @ sysbus <0x48001400, +0x400>
    modeResetValue: 0xFFFFFFFF
    [0-15] -> exti@[0-15]

gpioPortG: GPIOPort.STM32_GPIOPort @ sysbus <0x48001800, +0x400>
    modeResetValue: 0xFFFFFFFF
    [0-15] -> exti@[0-15]

gpioPortH: GPIOPort.STM32_GPIOPort @ sysbus <0x48001C00, +0x400>
    modeResetValue: 0x0000000F
    [0-15] -> exti@[0-15]

rcc: Python.PythonPeripheral @ sysbus 0x40021000
    size: 0x98
    initable: true
    script: '''
if request.isInit:
    CR = 0x00000063
    CFGR = 0x00000000

elif request.isRead:
    if request.offset == 0:
        request.value = CR
    elif request.offset == 8:
        request.value = CFGR

elif request.isWrite:
    if request.offset == 0:
        CR = request.value
        # HSION
        if request.value & 0x00000100:
            # set CR->HSIRDY
            CR |= 0x00000400
        # PLLON
        if request.value & 0x01000000:
            # set CR->PLLRDY
            CR |= 0x02000000
    
    if request.offset == 8:
        CFGR = request.value
        # SW = HSI
        if (request.value & 0x00000003) == 0x00000001:
            # set CFGR->SWS to HSI
            CFGR |= 0x00000004
        # SW = PLL
        if (request.value & 0x00000003) == 0x0000003:
            # set CFGR->SWS to PLL
            CFGR |= 0x0000000C
'''
