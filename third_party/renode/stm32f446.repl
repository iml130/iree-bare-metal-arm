// SPDX-FileCopyrightText: Antmicro <www.antmicro.com>
// SPDX-FileCopyrightText: 2022 Fraunhofer-Gesellschaft zur FÃ¶rderung der angewandten Forschung e.V.
// SPDX-License-Identifier: MIT

flash: Memory.MappedMemory @ sysbus 0x08000000
    size: 0x80000

sram: Memory.MappedMemory @ sysbus 0x20000000
    size: 0x20000

nvic: IRQControllers.NVIC @ sysbus 0xE000E000
    priorityMask: 0xF0
    systickFrequency: 180000000
    IRQ -> cpu@0

cpu: CPU.CortexM @ sysbus
    cpuType: "cortex-m4"
    nvic: nvic

usart1: UART.STM32_UART @ sysbus <0x40011000, +0x400>
    IRQ -> nvic@37

usart2: UART.STM32_UART @ sysbus <0x40004400, +0x400>
    IRQ -> nvic@38

usart3: UART.STM32_UART @ sysbus <0x40004800, +0x400>
    IRQ -> nvic@39

uart4: UART.STM32_UART @ sysbus <0x40004C00, +0x400>
    IRQ -> nvic@52

uart5: UART.STM32_UART @ sysbus <0x40005000, +0x400>
    IRQ -> nvic@53

usart6: UART.STM32_UART @ sysbus <0x40011400, +0x400>
    IRQ -> nvic@71

can1: CAN.STMCAN @ sysbus <0x40006400, +0x400>
    [0-3] -> nvic@[19-22]

// Renode 1.12 does not support slave CAN yet
//can2: CAN.STMCAN @ sysbus <0x40006800, +0x400>
//    [0-3] -> nvic@[63-66]
//    master: can1

exti: IRQControllers.STM32F4_EXTI @ sysbus 0x40013C00
    [0-6] -> nvic@[6-10, 23, 40]
    numberOfOutputLines: 23

gpioPortA: GPIOPort.STM32_GPIOPort @ sysbus <0x40020000, +0x400>
    modeResetValue: 0xA8000000
    pullUpPullDownResetValue: 0x64000000
    [0-15] -> exti@[0-15]

gpioPortB: GPIOPort.STM32_GPIOPort @ sysbus <0x40020400, +0x400>
    modeResetValue: 0x00000280
    outputSpeedResetValue: 0x000000C0
    pullUpPullDownResetValue: 0x00000100
    [0-15] -> exti@[0-15]

gpioPortC: GPIOPort.STM32_GPIOPort @ sysbus <0x40020800, +0x400>
    [0-15] -> exti@[0-15]

gpioPortD: GPIOPort.STM32_GPIOPort @ sysbus <0x40020C00, +0x400>
    [0-15] -> exti@[0-15]

gpioPortE: GPIOPort.STM32_GPIOPort @ sysbus <0x40021000, +0x400>
    [0-15] -> exti@[0-15]

gpioPortF: GPIOPort.STM32_GPIOPort @ sysbus <0x40021400, +0x400>
    [0-15] -> exti@[0-15]

gpioPortG: GPIOPort.STM32_GPIOPort @ sysbus <0x40021800, +0x400>
    [0-15] -> exti@[0-15]

gpioPortH: GPIOPort.STM32_GPIOPort @ sysbus <0x40021C00, +0x400>
    [0-15] -> exti@[0-15]

rom: Memory.MappedMemory @ sysbus 0x1FFF0000
    size: 0x10000

spi1: SPI.STM32SPI @ sysbus 0x40013000
    IRQ -> nvic@35

spi2: SPI.STM32SPI @ sysbus 0x40003800
    IRQ -> nvic@36

spi3: SPI.STM32SPI @ sysbus 0x40003C00
    IRQ -> nvic@51

spi4: SPI.STM32SPI @ sysbus 0x40013400
    IRQ -> nvic@84

dma1: DMA.STM32DMA @ sysbus 0x40026000
    [0-7] -> nvic@[11-17,47]

dma2: DMA.STM32DMA @ sysbus 0x40026400
    [0-7] -> nvic@[56-60,68-70]

i2c1: I2C.STM32F4_I2C @ sysbus 0x40005400
    EventInterrupt -> nvic@31
    ErrorInterrupt -> nvic@32

i2c2: I2C.STM32F4_I2C @ sysbus 0x40005800
    EventInterrupt -> nvic@33
    ErrorInterrupt -> nvic@34

i2c3: I2C.STM32F4_I2C @ sysbus 0x40005C00
    EventInterrupt -> nvic@72
    ErrorInterrupt -> nvic@73

rtc: Timers.STM32F4_RTC @ sysbus 0x40002800
    AlarmIRQ -> nvic@41

rcc: Miscellaneous.STM32F4_RCC @ sysbus 0x40023800
    rtcPeripheral: rtc

timer1: Timers.STM32_Timer @ sysbus <0x40010000, +0x400>
    frequency: 10000000
    initialLimit: 0xFFFF

timer2: Timers.STM32_Timer @ sysbus <0x40000000, +0x400>
    -> nvic@28
    frequency: 10000000
    initialLimit: 0xFFFFFFFF

timer3: Timers.STM32_Timer @ sysbus <0x40000400, +0x400>
    -> nvic@29
    frequency: 10000000
    initialLimit: 0xFFFF

timer4: Timers.STM32_Timer @ sysbus <0x40000800, +0x400>
    -> nvic@30
    frequency: 10000000
    initialLimit: 0xFFFF

timer5: Timers.STM32_Timer @ sysbus <0x40000C00, +0x400>
    -> nvic@50
    frequency: 10000000
    initialLimit: 0xFFFFFFFF

timer6: Timers.STM32_Timer @ sysbus <0x40001000, +0x400>
    -> nvic@54
    frequency: 10000000
    initialLimit: 0xFFFF

timer7: Timers.STM32_Timer @ sysbus <0x40001400, +0x400>
    -> nvic@55
    frequency: 10000000
    initialLimit: 0xFFFF

timer8: Timers.STM32_Timer @ sysbus <0x40010400, +0x400>
    frequency: 10000000
    initialLimit: 0xFFFF

timer9: Timers.STM32_Timer @ sysbus <0x40014000, +0x400>
    -> nvic@24
    frequency: 10000000
    initialLimit: 0xFFFF

timer10: Timers.STM32_Timer @ sysbus <0x40014400, +0x400>
    -> nvic@25
    frequency: 10000000
    initialLimit: 0xFFFF

timer11: Timers.STM32_Timer @ sysbus <0x40014800, +0x400>
    -> nvic@26
    frequency: 10000000
    initialLimit: 0xFFFF

timer12: Timers.STM32_Timer @ sysbus <0x40001800, +0x400>
    -> nvic@43
    frequency: 10000000
    initialLimit: 0xFFFF

timer13: Timers.STM32_Timer @ sysbus <0x40001C00, +0x400>
    -> nvic@44
    frequency: 10000000
    initialLimit: 0xFFFF

timer14: Timers.STM32_Timer @ sysbus <0x40002000, +0x400>
    -> nvic@45
    frequency: 10000000
    initialLimit: 0xFFFF
